{"version":3,"sources":["images/home_bg.jpg","theme.jsx","components/Navbar.jsx","components/ContactInfoBar.jsx","components/Footer.jsx","images/index.js","pages/Home.jsx","App.jsx","serviceWorker.js","index.js"],"names":["module","exports","text_theme","font","color_theme","Bar","styled","div","ItemList","ItemLink","Link","ItemGoTo","TitleLink","NavButton","useWindowDimensions","window","width","innerWidth","height","innerHeight","useState","windowDimensions","setWindowDimensions","useEffect","handleResize","getWindowDimensions","addEventListener","removeEventListener","OpenContext","React","createContext","VerticalBar","FontAwesomeIcon","props","expanded","css","Cover","TitleText","Split","hr","Sidebar","children","useContext","open","setOpen","pathname","useLocation","onCLick","to","replace","Navbar","onClick","scrollTo","document","body","scrollHeight","icon","Provider","value","ContactItem","ContactIcon","ContactInfoBar","FooterBar","Item","FooterText","span","Icon","Footer","home_bg","require","HomePage","Header","AnimatedDiv","PageTitle","PageTitleText","SignUpButton","Body","Section","SectionIcon","SectionHeaderText","SectionText","Line","SectionGrid","GridItem","Home","App","exact","path","component","Boolean","location","hostname","match","library","add","fas","fab","far","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.09a83ed7.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/home_bg.d1c2800b.jpg\";","export let text_theme = {\r\n  header: {\r\n    font: \"Georgia, serif\",\r\n  },\r\n  default: {\r\n    font: \"Arial Narrow, sans-serif\",\r\n  },\r\n};\r\n\r\nexport let color_theme = {\r\n  primary: \"25, 25, 112\", //steel blue\r\n  secondary: \"70, 130, 180\", //steel blue\r\n  tertiary: \"0, 100, 0\", //dark green\r\n};\r\n","import React, { useEffect, useState, useContext } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useLocation } from \"react-router-dom\";\r\n\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { color_theme, text_theme } from \"../theme\";\r\n\r\nconst Bar = styled.div`\r\n  background-color: rgba(${color_theme.primary}, 0.5);\r\n  display: flex;\r\n  flex-direction: row;\r\n  color: white;\r\n  height: 8vh;\r\n  align-items: stretch;\r\n  padding: 10px 20px;\r\n  transition: 0.5s;\r\n\r\n  font-family: ${text_theme.header.font};\r\n\r\n  @media screen and (max-width: 600px) {\r\n    padding: 5px 10px;\r\n  }\r\n`;\r\n\r\nconst ItemList = styled.div`\r\n  background: transparent;\r\n  transition: 0.5s;\r\n  align-self: right;\r\n  flex: 1;\r\n  display: flex;\r\n  flex-direction: row;\r\n  justify-content: flex-end;\r\n`;\r\n\r\nconst ItemLink = styled(Link)`\r\n  background: transparent;\r\n  transition: 0.5s;\r\n  align-self: right;\r\n  margin-right: 10px;\r\n  color: white;\r\n  text-decoration: none;\r\n  font-size: 20px;\r\n  align-items: center;\r\n  display: flex;\r\n  padding: 0px 10px;\r\n\r\n  &:hover {\r\n    background-color: rgba(255, 255, 255, 0.3);\r\n  }\r\n\r\n  @media screen and (max-width: 600px) {\r\n    font-size: 15px;\r\n    padding: 0px 5px;\r\n    margin-right: 3px;\r\n  }\r\n`;\r\n\r\nconst ItemGoTo = styled.div`\r\n  background: transparent;\r\n  transition: 0.5s;\r\n  align-self: right;\r\n  margin-right: 10px;\r\n  color: white;\r\n  text-decoration: none;\r\n  font-size: 20px;\r\n  align-items: center;\r\n  display: flex;\r\n  padding: 0px 10px;\r\n\r\n  &:hover {\r\n    background-color: rgba(255, 255, 255, 0.3);\r\n  }\r\n\r\n  @media screen and (max-width: 600px) {\r\n    font-size: 15px;\r\n    padding: 0px 5px;\r\n    margin-right: 3px;\r\n  }\r\n`;\r\n\r\nconst TitleLink = styled(Link)`\r\n  color: white;\r\n  text-decoration: none;\r\n  font-size: 30px;\r\n  transition: 0.5s;\r\n  align-items: center;\r\n  display: flex;\r\n\r\n  @media screen and (max-width: 600px) {\r\n    font-size: 20px;\r\n  }\r\n`;\r\n\r\nconst NavButton = styled.div`\r\n  background: transparent;\r\n  transition: 0.5s;\r\n  align-self: right;\r\n  margin-right: 10px;\r\n  color: white;\r\n  text-decoration: none;\r\n  font-size: 25px;\r\n  align-items: center;\r\n  display: flex;\r\n  padding: 0px 10px;\r\n  margin-right: 3px;\r\n\r\n  &:hover {\r\n    background-color: rgba(255, 255, 255, 0.3);\r\n  }\r\n\r\n  @media screen and (max-width: 600px) {\r\n    font-size: 20px;\r\n  }\r\n`;\r\n\r\nfunction getWindowDimensions() {\r\n  const { innerWidth: width, innerHeight: height } = window;\r\n  return {\r\n    width,\r\n    height,\r\n  };\r\n}\r\n\r\nconst useWindowDimensions = () => {\r\n  const { innerWidth: width, innerHeight: height } = window;\r\n\r\n  const [windowDimensions, setWindowDimensions] = useState({\r\n    width,\r\n    height,\r\n  });\r\n\r\n  useEffect(() => {\r\n    function handleResize() {\r\n      setWindowDimensions(getWindowDimensions());\r\n    }\r\n\r\n    window.addEventListener(\"resize\", handleResize);\r\n    return () => window.removeEventListener(\"resize\", handleResize);\r\n  }, []);\r\n\r\n  return windowDimensions;\r\n};\r\n\r\nconst OpenContext = React.createContext(null);\r\n\r\nconst Navbar = () => {\r\n  const { pathname } = useLocation();\r\n\r\n  const [open, setOpen] = useState(false);\r\n  const { width } = useWindowDimensions();\r\n  const menuIconAppearWidth = 800;\r\n\r\n  useEffect(() => {\r\n    if (width > menuIconAppearWidth) {\r\n      setOpen(false);\r\n    }\r\n  }, [width]);\r\n\r\n  return (\r\n    <Bar>\r\n      <TitleLink to=\"/\" replace={pathname === \"/\"}>\r\n        Texas VCG\r\n      </TitleLink>\r\n      <ItemList>\r\n        {width > menuIconAppearWidth ? (\r\n          <>\r\n            <ItemLink to=\"/about\" replace={pathname === \"/about\"}>\r\n              About\r\n            </ItemLink>\r\n            <ItemLink to=\"/team\" replace={pathname === \"/team\"}>\r\n              Team\r\n            </ItemLink>\r\n            <ItemLink to=\"/resources\" replace={pathname === \"/resources\"}>\r\n              Resources\r\n            </ItemLink>\r\n            <ItemGoTo\r\n              onClick={() => window.scrollTo(0, document.body.scrollHeight)}\r\n            >\r\n              Contact\r\n            </ItemGoTo>\r\n          </>\r\n        ) : (\r\n          <NavButton onClick={() => setOpen(!open)}>\r\n            <FontAwesomeIcon icon={[\"fas\", \"bars\"]} />\r\n            <OpenContext.Provider value={{ open, setOpen }}>\r\n              <Sidebar>\r\n                <ItemLink to=\"/about\" replace={pathname === \"/about\"}>\r\n                  About\r\n                </ItemLink>\r\n                <ItemLink to=\"/team\" replace={pathname === \"/team\"}>\r\n                  Team\r\n                </ItemLink>\r\n                <ItemLink to=\"/resources\" replace={pathname === \"/resources\"}>\r\n                  Resources\r\n                </ItemLink>\r\n                <ItemGoTo\r\n                  onClick={() => window.scrollTo(0, document.body.scrollHeight)}\r\n                >\r\n                  Contact\r\n                </ItemGoTo>\r\n              </Sidebar>\r\n            </OpenContext.Provider>\r\n          </NavButton>\r\n        )}\r\n      </ItemList>\r\n    </Bar>\r\n  );\r\n};\r\n\r\nconst Icon = styled(FontAwesomeIcon)``;\r\n\r\nconst VerticalBar = styled.div`\r\n  background-color: rgb(${color_theme.primary});\r\n  position: fixed;\r\n  top: 0px;\r\n  ${(props) =>\r\n    props.expanded\r\n      ? css`\r\n          right: 0px;\r\n        `\r\n      : css`\r\n          right: -40vw;\r\n        `}\r\n  height: 100vh;\r\n  width: 40vw;\r\n\r\n  overflow: hidden;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: flex-start;\r\n  align-items: center;\r\n  padding: 40px 0px;\r\n  transition: right 0.5s;\r\n\r\n  & > * {\r\n    margin-bottom: 10px;\r\n    padding: 10px 20px;\r\n  }\r\n\r\n  @media screen and (max-width: 600px) {\r\n    width: 60vw;\r\n    & > * {\r\n      margin-bottom: 5px;\r\n      padding: 10px 20px;\r\n    }\r\n    ${(props) =>\r\n      props.expanded\r\n        ? css`\r\n            right: 0px;\r\n          `\r\n        : css`\r\n            right: -60vw;\r\n          `}\r\n  }\r\n`;\r\n\r\nconst Cover = styled.div`\r\n  \r\n  position: fixed;\r\n  background-color: ${(props) =>\r\n    props.expanded\r\n      ? css`\r\n          rgba(0,0,0,0.75);\r\n        `\r\n      : css`\r\n      rgba(0,0,0,0);\r\n        `}\r\n  width: ${(props) =>\r\n    props.expanded\r\n      ? css`\r\n          100vw;\r\n        `\r\n      : css`\r\n      0px;\r\n        `}\r\n  height: 100vh;\r\n  right: 0px;\r\n  top: 0px;\r\n  transition: 0.33s;\r\n`;\r\n\r\nconst TitleText = styled(TitleLink)`\r\n  margin-bottom: 0px;\r\n`;\r\n\r\nconst Split = styled.hr`\r\n  width: 80%;\r\n  border: solid 2px;\r\n  color: white;\r\n  margin: 20px 0px;\r\n  padding: 0px;\r\n`;\r\n\r\nconst Sidebar = ({ children }) => {\r\n  const { open, setOpen } = useContext(OpenContext);\r\n  const { pathname } = useLocation();\r\n\r\n  return (\r\n    <>\r\n      <Cover expanded={open} onCLick={() => setOpen(false)} />\r\n      <VerticalBar expanded={open}>\r\n        <TitleText to=\"/\" replace={pathname === \"/\"}>\r\n          Texas VCG\r\n        </TitleText>\r\n        <Split />\r\n        {children}\r\n      </VerticalBar>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Navbar;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\n\r\nimport { color_theme, text_theme } from \"../theme\";\r\n\r\nconst Bar = styled.div`\r\n  background-color: transparent;\r\n  display: flex;\r\n  flex-direction: row;\r\n  color: rgb(${color_theme.primary});\r\n  align-items: center;\r\n  justify-content: center;\r\n  padding: 10px 10px;\r\n  transition: 0.5s;\r\n\r\n  font-family: ${text_theme.header.font};\r\n\r\n  @media screen and (max-width: 600px) {\r\n    height: 10vh;\r\n    padding: 5px 10px;\r\n  }\r\n`;\r\n\r\nconst ContactItem = styled.div`\r\n  padding: 5px;\r\n  font-size: 15px;\r\n  display: flex;\r\n  flex-direction: row;\r\n  align-items: center;\r\n  justify-content: center;\r\n  border: white 3px double;\r\n  color: white;\r\n  text-decoration: none;\r\n  transition: 0.5s;\r\n  margin-bottom: 5px;\r\n\r\n  &:hover {\r\n    background-color: rgba(255, 255, 255, 0.5);\r\n  }\r\n`;\r\n\r\nconst ContactIcon = styled(FontAwesomeIcon)`\r\n  font-size: 20px;\r\n  margin-right: 10px;\r\n`;\r\n\r\nconst ContactInfoBar = () => {\r\n  return (\r\n    <Bar>\r\n      <ContactItem\r\n        onClick={() =>\r\n          window.open(\"mailto:utventurecapital@gmail.com\", \"_blank\")\r\n        }\r\n      >\r\n        <ContactIcon icon={[\"far\", \"envelope\"]} />\r\n        Contact Us: utventurecapital@gmail.com\r\n      </ContactItem>\r\n    </Bar>\r\n  );\r\n};\r\nexport default ContactInfoBar;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\n\r\nimport ContactInfoBar from \"./ContactInfoBar\";\r\nimport { color_theme, text_theme } from \"../theme\";\r\n\r\nconst FooterBar = styled.div`\r\n  background-color: rgb(${color_theme.primary});\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n  padding: 40px 0px;\r\n`;\r\n\r\nconst ItemList = styled.div`\r\n  background: transparent;\r\n  transition: 0.5s;\r\n  display: flex;\r\n  flex-direction: row;\r\n  align-items: center;\r\n  justify-content: center;\r\n  margin-bottom: 15px;\r\n`;\r\n\r\nconst Item = styled.div`\r\n  border-radius: 50%;\r\n  width: 30px;\r\n  height: 30px;\r\n  background: transparent;\r\n  font-size: 20px;\r\n  transition: 0.5s;\r\n  align-self: right;\r\n  margin-right: 10px;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  border: 1px solid white;\r\n  color: white;\r\n\r\n  &:hover {\r\n    background: white;\r\n    color: rgb(${color_theme.primary});\r\n  }\r\n`;\r\n\r\nconst FooterText = styled.span`\r\n  font-size: 15px;\r\n  text-align: center;\r\n  font-family: ${text_theme.header.font};\r\n  color: white;\r\n`;\r\n\r\nconst Icon = styled(FontAwesomeIcon)``;\r\n\r\nconst Footer = () => {\r\n  return (\r\n    <FooterBar>\r\n      <ContactInfoBar />\r\n      <ItemList>\r\n        <Item onClick={() => window.open(\"http://linkedin.com\", \"_blank\")}>\r\n          <Icon icon={[\"fab\", \"linkedin-in\"]} />\r\n        </Item>\r\n        <Item onClick={() => window.open(\"http://facebook.com\", \"_blank\")}>\r\n          <Icon icon={[\"fab\", \"facebook\"]} />\r\n        </Item>\r\n        <Item onClick={() => window.open(\"http://instagram.com\", \"_blank\")}>\r\n          <Icon icon={[\"fab\", \"instagram\"]} />\r\n        </Item>\r\n      </ItemList>\r\n      <FooterText>Texas Venture Capital Group &copy; 2020</FooterText>\r\n    </FooterBar>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n","export const home_bg = require(\"./home_bg.jpg\");\r\n","import React, { useRef } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\n\r\nimport { Navbar, Footer, ContactInfoBar } from \"../components\";\r\nimport { home_bg } from \"../images\";\r\nimport { color_theme, text_theme } from \"../theme\";\r\n\r\nconst HomePage = styled.div`\r\n  background: transparent;\r\n  display: flex;\r\n  flex-direction: column;\r\n  transition: 0.5s;\r\n`;\r\n\r\nconst Header = styled.div`\r\n  background: linear-gradient(rgba(0, 0, 0, 0.5), rgba(0, 0, 0, 0.5)),\r\n    url(${home_bg}) center;\r\n  background-size: cover;\r\n`;\r\n\r\nconst AnimatedDiv = styled.div`\r\n  animation: fade-in 4s both;\r\n  height: 80vh;\r\n  display: flex;\r\n  flex-direction: column;\r\n  @keyframes fade-in {\r\n    from {\r\n      background-color: rgba(0, 0, 0, 1);\r\n    }\r\n    to {\r\n      background-color: rgba(0, 0, 0, 0);\r\n    }\r\n  }\r\n`;\r\n\r\nconst PageTitle = styled.div`\r\n  color: white;\r\n  display: flex;\r\n  flex: 1;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: center;\r\n  padding: 0px 10%;\r\n  transition: 0.5s;\r\n`;\r\n\r\nconst PageTitleText = styled.span`\r\n  margin-bottom: 3vh;\r\n  font-size: 55px;\r\n  text-align: center;\r\n  font-family: ${text_theme.header.font};\r\n\r\n  @media screen and (max-width: 600px), (max-height: 600px) {\r\n    font-size: 40px;\r\n  }\r\n\r\n  @media screen and (min-width: 900px) {\r\n    overflow: hidden;\r\n    white-space: nowrap;\r\n    animation: typing 2s steps(28, end) 1s 1 normal both;\r\n  }\r\n\r\n  @keyframes typing {\r\n    from {\r\n      width: 0;\r\n    }\r\n    to {\r\n      width: 100%;\r\n    }\r\n  }\r\n`;\r\n\r\nconst SignUpButton = styled.div`\r\n  background-color: transparent;\r\n  font-size: 35px;\r\n  border: white 3px double;\r\n  font-family: ${text_theme.header.font};\r\n  margin: 5px;\r\n  padding: 10px;\r\n  transition: 0.5s;\r\n  cursor: pointer;\r\n  color: white;\r\n  &:hover {\r\n    padding: 15px;\r\n    margin: 0px;\r\n    background-color: rgba(255, 255, 255, 0.4);\r\n  }\r\n  @media screen and (max-width: 600px) {\r\n    font-size: 25px;\r\n  }\r\n`;\r\n\r\nconst Body = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n\r\n  background-color: white;\r\n`;\r\n\r\nconst Section = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  padding: 5vh 10vw;\r\n`;\r\n\r\nconst SectionIcon = styled(FontAwesomeIcon)`\r\n  font-size: 50px;\r\n  color: black;\r\n  margin-bottom: 20px;\r\n  color: rgb(${color_theme.secondary});\r\n  @media screen and (max-width: 600px), (max-height: 600px) {\r\n    margin-bottom: 10px;\r\n    font-size: 35px;\r\n  }\r\n`;\r\n\r\nconst SectionHeaderText = styled.span`\r\n  font-size: 30px;\r\n  margin-bottom: 25px;\r\n  text-align: center;\r\n  font-family: ${text_theme.header.font};\r\n  color: rgb(${color_theme.primary});\r\n  @media screen and (max-width: 600px), (max-height: 600px) {\r\n    margin-bottom: 10px;\r\n    font-size: 25px;\r\n  }\r\n`;\r\n\r\nconst SectionText = styled.span`\r\n  font-size: 20px;\r\n  margin-bottom: 20px;\r\n  text-align: center;\r\n  font-family: ${text_theme.default.font};\r\n\r\n  b {\r\n    color: rgb(${color_theme.primary});\r\n    text-decoration: underline;\r\n  }\r\n\r\n  @media screen and (max-width: 600px), (max-height: 600px) {\r\n    margin-bottom: 5px;\r\n    font-size: 15px;\r\n  }\r\n`;\r\n\r\nconst Line = styled.hr`\r\n  color: black;\r\n  width: 80%;\r\n`;\r\n\r\nconst SectionGrid = styled.div`\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  flex-direction: row;\r\n  align-items: flex-start;\r\n  justify-content: center;\r\n`;\r\n\r\nconst GridItem = styled.div`\r\n  width: 325px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: flex-start;\r\n  padding: 10px 15px;\r\n\r\n  @media screen and (max-width: 600px) {\r\n    width: 175px;\r\n    padding: 10px 10px;\r\n  }\r\n\r\n  @media screen and (max-width: 1200px) {\r\n    width: 250px;\r\n  }\r\n`;\r\n\r\nconst Home = () => {\r\n  return (\r\n    <HomePage>\r\n      <Header>\r\n        <AnimatedDiv>\r\n          <Navbar />\r\n          <PageTitle>\r\n            <PageTitleText>Texas Venture Capital Group</PageTitleText>\r\n            <SignUpButton\r\n              onClick={() => window.open(\"http://google.com\", \"_blank\")}\r\n            >\r\n              Sign Up\r\n            </SignUpButton>\r\n          </PageTitle>\r\n        </AnimatedDiv>\r\n      </Header>\r\n\r\n      <Body>\r\n        <Section>\r\n          <SectionIcon icon={[\"fas\", \"hand-holding-usd\"]} />\r\n          <SectionHeaderText>\r\n            UT Austin's student-led organization on venture capital and startup\r\n            funding.\r\n          </SectionHeaderText>\r\n          <SectionText>\r\n            Austin is home to one of the world's fastest growing startup\r\n            ecosystems. We hope to bring more awareness to venture capital at\r\n            Austin and its university to build smart, socially-responsible\r\n            investors who can continue to fuel the boom of new startups far into\r\n            the future.\r\n          </SectionText>\r\n        </Section>\r\n        <Line />\r\n        <Section>\r\n          <SectionHeaderText>Our Mission Statement</SectionHeaderText>\r\n          <SectionText>\r\n            We aim to create a close-knit organization focused education and\r\n            careers on venture capital and startup financing that supports{\" \"}\r\n            <b>exploration and learning</b>, <b>networks and community</b>, and{\" \"}\r\n            <b>professionalism</b>.\r\n          </SectionText>\r\n          <SectionGrid>\r\n            <GridItem>\r\n              <SectionIcon icon={[\"fas\", \"search\"]} />\r\n              <SectionHeaderText>Discover</SectionHeaderText>\r\n              <SectionText>\r\n                At Texas VCG, our primary goal is always to introduce our\r\n                members to field of venture capital, an area all too often\r\n                forgotten as an area of finance that seems beyond reach for the\r\n                average person. We want to redefine this vision of the industry\r\n                and help more people of the younger generations discover venture\r\n                capital as a tool for immense impact.\r\n              </SectionText>\r\n            </GridItem>\r\n            <GridItem>\r\n              <SectionIcon icon={[\"far\", \"address-book\"]} />\r\n              <SectionHeaderText>Connect</SectionHeaderText>\r\n              <SectionText>\r\n                A core mission of our organization is to foster a community\r\n                connected to the wider scene of venture capital and innovation.\r\n                We hope to help the students at UT Austin build networks and\r\n                meaning personal and professional connections with both the\r\n                local Austin and the rest of the world's venture capital\r\n                visionaries.\r\n              </SectionText>\r\n            </GridItem>\r\n            <GridItem>\r\n              <SectionIcon icon={[\"fas\", \"briefcase\"]} />\r\n              <SectionHeaderText>Prepare</SectionHeaderText>\r\n              <SectionText>\r\n                Through our activities and events, we hope to build in our\r\n                members a clear understanding of the industry's work and the\r\n                practical, real-life skills essential for the field. We aim to\r\n                foster analytical minds that can think with depth and clarity to\r\n                capture opportunities in the startup world, while building\r\n                involved individuals that see startup as not only investments\r\n                and opportunities, but partners and teammates willing to face\r\n                hardships and uncertainty together.\r\n              </SectionText>\r\n            </GridItem>\r\n          </SectionGrid>\r\n        </Section>\r\n      </Body>\r\n\r\n      <Footer />\r\n    </HomePage>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import React from \"react\";\nimport { BrowserRouter, Route, Switch, Redirect } from \"react-router-dom\";\n\nimport { Home } from \"./pages\";\n\nconst App = () => {\n  return (\n    <BrowserRouter>\n      <Switch>\n        <Route exact path=\"/\" component={Home} />\n        <Route exact path=\"/about\" component={Home} />\n        <Route exact path=\"/team\" component={Home} />\n        <Route exact path=\"/404\" component={Home} />\n        <Redirect to=\"/404\" />\n      </Switch>\n    </BrowserRouter>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nimport { library } from \"@fortawesome/fontawesome-svg-core\";\nimport { fab } from \"@fortawesome/free-brands-svg-icons\";\nimport { fas } from \"@fortawesome/free-solid-svg-icons\";\nimport { far } from \"@fortawesome/free-regular-svg-icons\";\n\nlibrary.add(fas, fab, far);\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}